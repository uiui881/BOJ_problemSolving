import java.util.*;
import java.io.*;


public class Main{
	
	public static int n, k;
	public static Queue<Integer> queue;
	
	public static int[] visited;
	public static int[] dist;
	
	public static int NUM = 100001;
	
	public static void main(String[] args)throws IOException{
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		
		n = Integer.parseInt(str[0]);
		k = Integer.parseInt(str[1]);
		
		queue = new LinkedList<Integer>();
		visited = new int[NUM];
		dist = new int[NUM];
		
		queue.offer(n);
		visited[n]=1;
		
		BFS();
	}
	
	public static void BFS() {
		int point;
		
		while(!queue.isEmpty()) {
			point = queue.poll();
			
			if(point == k) {
				System.out.println(dist[point]);
			}
			if(0 <= point-1 && visited[point-1]==0 ) {
				visited[point-1]=1;
				dist[point-1]=dist[point]+1;
				queue.offer(point-1);
			}
			if(point+1 <NUM && visited[point+1]==0 ) {
				visited[point+1]=1;
				dist[point+1]=dist[point]+1;
				queue.offer(point+1);
			}
			if(point*2 <NUM && visited[point*2]==0 ) {
				visited[point*2]=1;
				dist[point*2]=dist[point]+1;
				queue.offer(point *2);
			}
		}
	}
}
