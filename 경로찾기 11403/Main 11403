import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main{
	
	static int n, flag;
	static int[][] map;
	static int[][] check;
	
	public static void main(String[] args)throws IOException{
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer stzr;
		n = Integer.parseInt(br.readLine());
		map = new int[n][n];
		check = new int[n][n];
		
		for(int i=0;i<n;i++) {
			stzr = new StringTokenizer(br.readLine());
			for(int j=0; j<n;j++) {
				map[i][j]=Integer.parseInt(stzr.nextToken());
			}
		}//맵 완성!!
	
		Solution();
		
		for(int i=0; i<n;i++) {
			for(int j=0; j<n;j++) {
				System.out.print(check[i][j]+" ");
			}
			System.out.println();
		}
	}
	
	public static void Solution() {
		for(int i=0; i<n;i++) {
			for(int j=0; j<n;j++){
				if(map[i][j]==1) {
					DFS(i,j);
				}
		}
		}
	}
	public static void DFS(int i, int j) {
		check[i][j]=1;
		
		for(int a=0; a<n;a++) {
			if(map[j][a]==1 && check[i][a]!=1) {
				DFS(i,a);
			}
		}
	}
}
