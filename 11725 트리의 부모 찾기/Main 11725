import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;
 
public class Main {

	public static int n;
	public static int[] parent;
	public static int[] depth;
	public static ArrayList<Integer>[] tree;
	public static StringBuilder sb = new StringBuilder();
    public static void main(String args[]) throws Exception {
       
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	StringTokenizer stzr;// = new StringTokenizer(br.readLine());
    	
    	n = Integer.parseInt(br.readLine());
    	tree= new ArrayList[n+1];
    	depth = new int[n+1];
    	parent = new int[n+1];
    	for(int i=1;i<=n;i++) {
    		tree[i]= new ArrayList<Integer>();
    	}
    	for(int i=1;i<n;i++) {
    		stzr= new StringTokenizer(br.readLine());
    		int a = Integer.parseInt(stzr.nextToken());
    		int b = Integer.parseInt(stzr.nextToken());
    		
    		tree[a].add(b);
    		tree[b].add(a);
    	}
    	
    	parentDFS(1,1,0);
    	
    	for(int i=2;i<=n;i++) {
    		sb.append(parent[i]+"\n");
    	}
    	System.out.println(sb);
    }
    
    public static void parentDFS(int node, int xdepth, int xparent) {
    	depth[node]=xdepth;
    	parent[node]= xparent;
    	
    	for(int num : tree[node]) {
    		if(depth[num]==0) {
    			parentDFS(num, xdepth+1, node);
    		}
    	}
    }
}
